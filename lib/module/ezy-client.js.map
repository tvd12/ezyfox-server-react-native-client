{"version":3,"sources":["ezy-client.js"],"names":["Proxy","Manager","EzySetup","Const","EzyLogger","EzyClient","constructor","config","callback","run2","toMap","outputConfig","name","clientName","enableSSL","enableDebug","zone","me","handlerManager","EzyHandlerManager","setup","connect","host","port","privateKey","sessionKey","run","reconnect","disconnect","reason","r","EzyDisconnectReason","CLOSE","close","send","cmd","data","encrypted","shouldEncrypted","error","params","requestParams","startPingSchedule","setStatus","status","setSessionKey","getApp","appManager","app","getAppById","appId","getPluginById","pluginId","pluginManager","newAppManager","zoneName","EzyAppManager","getAppManager","getPluginManager","handleEvent","eventType","eventHandlers","handle","handleData","command","dataHandlers"],"mappings":"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","sourcesContent":["import Proxy from './proxy'\nimport Manager from './ezy-managers'\nimport EzySetup from './ezy-setup'\nimport Const from './ezy-constants'\nimport EzyLogger from './ezy-logger'\n\nclass EzyClient {\n    constructor(config, callback) {\n        Proxy.run2(\"init\", config.toMap(), outputConfig => {\n            this.config = outputConfig;\n            this.name = outputConfig.clientName;\n            this.enableSSL = config.enableSSL;\n            this.enableDebug = config.enableDebug;\n            this.zone = null;\n            this.me = null;\n            this.handlerManager = new Manager.EzyHandlerManager(this);\n            this.setup = new EzySetup(this.handlerManager);\n            callback(this);\n        });\n    }\n\n    connect(host, port) {\n        this.privateKey = null;\n        this.sessionKey = null;\n        Proxy.run(\"connect\", {clientName : this.name, host: host, port: port});\n    }\n\n    reconnect(callback) {\n        this.privateKey = null;\n        this.sessionKey = null;\n        Proxy.run2(\"reconnect\", {clientName: this.name}, callback);\n    }\n\n    disconnect(reason) {\n        var r = reason ? reason : Const.EzyDisconnectReason.CLOSE;\n        Proxy.run(\"disconnect\", {clientName : this.name, reason : r});\n    }\n\n    close() {\n        this.disconnect();\n    }\n\n    send(cmd, data, encrypted) {\n        var shouldEncrypted = encrypted;\n        if(encrypted && !sessionKey) {\n            if(enableDebug) {\n                shouldEncrypted = false;\n            }\n            else {\n                EzyLogger.error(\n                    \"can not send command: $cmd, you must enable SSL \" +\n                    \"or enable debug mode by configuration when you create the client\"\n                );\n                return;\n            }\n        }\n        var params = {};\n        params[\"clientName\"] = this.name;\n        var requestParams = {};\n        requestParams[\"command\"] = cmd;\n        requestParams[\"data\"] = data;\n        requestParams[\"encrypted\"] = shouldEncrypted;\n        params[\"request\"] = requestParams;\n        Proxy.run(\"send\", params);\n    }\n\n    startPingSchedule() {\n        Proxy.run(\"startPingSchedule\", {clientName: this.name});\n    }\n\n    setStatus(status) {\n        Proxy.run(\"setStatus\", {clientName: this.name, status: status});\n    }\n    \n    setSessionKey(sessionKey) {\n        Proxy.run(\"setSessionKey\", {clientName: this.name, sessionKey: sessionKey});\n    }\n\n    getApp() {\n        if(this.zone) {\n            var appManager = this.zone.appManager;\n            var app = appManager.getApp();\n            return app;\n        }\n        return null;\n    }\n\n    getAppById(appId) {\n        if(!this.zone) return null;\n        var appManager = this.zone.appManager;\n        return appManager.getAppById(appId);\n    }\n\n    getPluginById(pluginId) {\n        if(!this.zone) return null;\n        var pluginManager = this.zone.pluginManager;\n        return pluginManager.getPluginById(pluginId);\n    }\n\n    newAppManager(zoneName) {\n        return new Manager.EzyAppManager(zoneName);\n    }\n\n    getAppManager() {\n        if(!this.zone) return null;\n        return this.zone.appManager;\n    }\n\n    getPluginManager() {\n        if(!this.zone) return null;\n        return this.zone.pluginManager;\n    }\n\n    handleEvent(eventType, data) {\n        var eventHandlers = this.handlerManager.eventHandlers;\n        eventHandlers.handle(eventType, data);\n    }\n\n    handleData(command, data) {\n        var dataHandlers = this.handlerManager.dataHandlers;\n        dataHandlers.handle(command, data);\n    }\n\n}\n\nexport default EzyClient"]}
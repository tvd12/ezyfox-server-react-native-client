{"version":3,"sources":["ezy-handlers.js"],"names":["EzyConnectionSuccessHandler","constructor","clientType","clientVersion","handle","client","setStatus","Const","EzyConnectionStatus","CONNECTED","sendHandshakeRequest","postHandle","generateClientKey","clientKey","send","EzyCommand","HANDSHAKE","newHandshakeRequest","clientId","getClientId","token","getStoredToken","request","push","isEnableSSL","enableSSL","enableDebug","isEmpty","callback","EzyRSAProxy","getInstance","generateKeyPair","keyPair","privateKey","publicKey","Util","EzyGuid","generate","EzyConnectionFailureHandler","event","EzyLogger","warn","reason","config","reconnectConfig","reconnect","should","shouldReconnect","mustReconnect","enable","FAILURE","success","onReconnecting","onConnectionFailed","EzyDisconnectionHandler","reasonName","EzyDisconnectReasons","getDisconnectReasonName","info","preHandle","reconnectEnable","EzyDisconnectReason","UNAUTHORIZED","CLOSE","DISCONNECTED","onDisconnected","ANOTHER_SESSION_LOGIN","EzyEventHandlers","handlers","addHandler","eventType","handler","getHandler","data","EzyHandshakeHandler","startPing","doHandle","onSessionKeyDecrypted","sessionKey","setSessionKey","handleLogin","sessionToken","sessionId","decryptSessionKey","encryptedSessionKey","error","close","decrypt","loginRequest","getLoginRequest","LOGIN","encryptedLoginRequest","startPingSchedule","EzyLoginSuccessHandler","zoneId","zoneName","userId","username","responseData","zone","Entity","EzyZone","user","EzyUser","me","handleLoginSuccess","name","EzyLoginErrorHandler","disconnect","handleLoginError","EzyAppAccessHandler","appManager","app","newApp","addApp","appId","appName","EzyApp","EzyAppExitHandler","reasonId","removeApp","EzyAppResponseHandler","cmd","commandData","getAppById","getDataHandler","EzyPluginInfoHandler","pluginManager","plugin","newPlugin","addPlugin","pluginId","pluginName","EzyPlugin","EzyPluginResponseHandler","getPluginById","EzyPongHandler","EzyDataHandlers","EzyAppDataHandlers","EzyPluginDataHandlers"],"mappings":"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","sourcesContent":["import Util from './ezy-util';\nimport Const from './ezy-constants';\nimport Entity from './ezy-entities';\nimport { EzyRSAProxy } from './ezy-codec';\nimport EzyLogger from './ezy-logger';\n\nclass EzyConnectionSuccessHandler {\n    constructor() {\n        this.clientType = 'REACT_NATIVE';\n        this.clientVersion = '1.0.0';\n    }\n\n    handle() {\n        this.client.setStatus(Const.EzyConnectionStatus.CONNECTED);\n        this.sendHandshakeRequest();\n        this.postHandle();\n    }\n\n    postHandle() {}\n\n    sendHandshakeRequest() {\n        this.generateClientKey((clientKey) => {\n            this.client.send(\n                Const.EzyCommand.HANDSHAKE,\n                this.newHandshakeRequest(clientKey)\n            );\n        });\n    }\n\n    newHandshakeRequest(clientKey) {\n        var clientId = this.getClientId();\n        var token = this.getStoredToken();\n        var request = [];\n        request.push(clientId);\n        request.push(clientKey);\n        request.push(this.clientType);\n        request.push(this.clientVersion);\n        request.push(this.isEnableSSL(clientKey));\n        request.push(token);\n        return request;\n    }\n\n    isEnableSSL(clientKey) {\n        if (\n            this.client.enableSSL &&\n            this.client.enableDebug &&\n            (!clientKey || clientKey.isEmpty)\n        ) {\n            return false;\n        }\n        return this.client.enableSSL;\n    }\n\n    generateClientKey(callback) {\n        if (this.client.enableSSL) {\n            EzyRSAProxy.getInstance().generateKeyPair((keyPair) => {\n                this.client.privateKey = keyPair.privateKey;\n                callback(keyPair.publicKey);\n            });\n        } else {\n            callback();\n        }\n    }\n\n    getClientId() {\n        return Util.EzyGuid.generate();\n    }\n\n    getStoredToken() {\n        return '';\n    }\n}\n\n//=======================================================\n\nclass EzyConnectionFailureHandler {\n    handle(event) {\n        EzyLogger.warn('connection failure, reason = ' + event.reason);\n        var config = this.client.config;\n        var reconnectConfig = config.reconnect;\n        var should = this.shouldReconnect(event);\n        var mustReconnect = reconnectConfig.enable && should;\n        this.client.setStatus(Const.EzyConnectionStatus.FAILURE);\n        if (mustReconnect) {\n            this.client.reconnect((success) => {\n                if (success) {\n                    this.onReconnecting(event);\n                } else {\n                    this.onConnectionFailed(event);\n                }\n                this.postHandle(event);\n            });\n        } else {\n            this.onConnectionFailed(event);\n            this.postHandle(event);\n        }\n    }\n\n    shouldReconnect(event) {\n        return true;\n    }\n\n    onReconnecting(event) {}\n\n    onConnectionFailed(event) {}\n\n    postHandle(event) {}\n}\n\n//=======================================================\n\nclass EzyDisconnectionHandler {\n    handle(event) {\n        var reason = event.reason;\n        var reasonName =\n            Const.EzyDisconnectReasons.getDisconnectReasonName(reason);\n        EzyLogger.info('handle disconnection, reason = ' + reasonName);\n        this.preHandle(event);\n        var config = this.client.config;\n        var reconnectConfig = config.reconnect;\n        var should = this.shouldReconnect(event);\n        var reconnectEnable = reconnectConfig.enable;\n        var mustReconnect =\n            reconnectEnable &&\n            reason !== Const.EzyDisconnectReason.UNAUTHORIZED &&\n            reason !== Const.EzyDisconnectReason.CLOSE &&\n            should;\n        this.client.setStatus(Const.EzyConnectionStatus.DISCONNECTED);\n        if (mustReconnect) {\n            this.client.reconnect((success) => {\n                if (success) {\n                    this.onReconnecting(event);\n                } else {\n                    this.onDisconnected(event);\n                }\n                this.postHandle(event);\n            });\n        } else {\n            this.onDisconnected(event);\n            this.postHandle(event);\n        }\n    }\n\n    preHandle(event) {}\n\n    shouldReconnect(event) {\n        var reason = event.reason;\n        if (reason === Const.EzyDisconnectReason.ANOTHER_SESSION_LOGIN) {\n            return false;\n        }\n        return true;\n    }\n\n    onReconnecting(event) {}\n\n    onDisconnected(event) {}\n\n    postHandle(event) {}\n}\n\n//======================================\n\nclass EzyEventHandlers {\n    constructor(client) {\n        this.handlers = {};\n        this.client = client;\n    }\n\n    addHandler(eventType, handler) {\n        handler.client = this.client;\n        this.handlers[eventType] = handler;\n    }\n\n    getHandler(eventType) {\n        var handler = this.handlers[eventType];\n        return handler;\n    }\n\n    handle(eventType, data) {\n        var handler = this.getHandler(eventType);\n        if (handler) handler.handle(data);\n        else EzyLogger.warn('has no handler with event: ' + eventType);\n    }\n}\n\n//======================================\n\nclass EzyHandshakeHandler {\n    handle(data) {\n        this.startPing();\n        this.doHandle(data);\n    }\n\n    onSessionKeyDecrypted(data, sessionKey, success) {\n        if (sessionKey) {\n            this.client.setSessionKey(sessionKey);\n        }\n        if (success) {\n            this.handleLogin();\n        }\n        this.postHandle(data);\n    }\n\n    doHandle(data) {\n        this.client.sessionToken = data[1];\n        this.client.sessionId = data[2];\n        if (this.client.enableSSL) {\n            this.decryptSessionKey(data[3], (sessionKey, success) => {\n                this.onSessionKeyDecrypted(data, sessionKey, success);\n            });\n        } else {\n            this.onSessionKeyDecrypted(data, null, true);\n        }\n    }\n\n    decryptSessionKey(encryptedSessionKey, callback) {\n        if (encryptedSessionKey == null) {\n            if (this.client.enableDebug) {\n                callback(null, true);\n                return;\n            }\n            EzyLogger.error(\n                'maybe server was not enable SSL, you must enable SSL on server or disable SSL on your client or enable debug mode'\n            );\n            this.client.close();\n            callback(null, false);\n            return;\n        }\n        EzyRSAProxy.getInstance().decrypt(\n            encryptedSessionKey,\n            this.client.privateKey,\n            (sessionKey) => {\n                callback(sessionKey, true);\n            }\n        );\n    }\n\n    postHandle(data) {}\n\n    handleLogin() {\n        var loginRequest = this.getLoginRequest();\n        this.client.send(\n            Const.EzyCommand.LOGIN,\n            loginRequest,\n            this.encryptedLoginRequest()\n        );\n    }\n\n    encryptedLoginRequest() {\n        return false;\n    }\n\n    getLoginRequest() {\n        return ['test', 'test', 'test', []];\n    }\n\n    startPing() {\n        this.client.startPingSchedule();\n    }\n}\n\n//=======================================================\n\nclass EzyLoginSuccessHandler {\n    handle(data) {\n        var zoneId = data[0];\n        var zoneName = data[1];\n        var userId = data[2];\n        var username = data[3];\n        var responseData = data[4];\n\n        var zone = new Entity.EzyZone(this.client, zoneId, zoneName);\n        var user = new Entity.EzyUser(userId, username);\n        this.client.me = user;\n        this.client.zone = zone;\n        this.handleLoginSuccess(responseData);\n        EzyLogger.info('user: ' + user.name + ' logged in successfully');\n    }\n\n    handleLoginSuccess(responseData) {}\n}\n\nclass EzyLoginErrorHandler {\n    handle(data) {\n        this.client.disconnect(401);\n        this.handleLoginError(data);\n    }\n\n    handleLoginError(data) {}\n}\n\n//=======================================================\n\nclass EzyAppAccessHandler {\n    handle(data) {\n        var zone = this.client.zone;\n        var appManager = zone.appManager;\n        var app = this.newApp(zone, data);\n        appManager.addApp(app);\n        this.postHandle(app, data);\n        EzyLogger.info('access app: ' + app.name + ' successfully');\n    }\n\n    newApp(zone, data) {\n        var appId = data[0];\n        var appName = data[1];\n        var app = new Entity.EzyApp(this.client, zone, appId, appName);\n        return app;\n    }\n\n    postHandle(app, data) {}\n}\n\n//======================================\n\nclass EzyAppExitHandler {\n    handle(data) {\n        var zone = this.client.zone;\n        var appManager = zone.appManager;\n        var appId = data[0];\n        var reasonId = data[1];\n        var app = appManager.removeApp(appId);\n        if (app) {\n            this.postHandle(app, data);\n            EzyLogger.info(\n                'user exit app: ' + app.name + ', reason: ' + reasonId\n            );\n        }\n    }\n\n    postHandle(app, data) {}\n}\n\n//=======================================================\n\nclass EzyAppResponseHandler {\n    handle(data) {\n        var appId = data[0];\n        var responseData = data[1];\n        var cmd = responseData[0];\n        var commandData = responseData[1];\n\n        var app = this.client.getAppById(appId);\n        var handler = app.getDataHandler(cmd);\n        if (handler) handler(app, commandData);\n        else\n            EzyLogger.warn(\n                'app: ' + app.name + ' has no handler for command: ' + cmd\n            );\n    }\n}\n\n//======================================\n\nclass EzyPluginInfoHandler {\n    handle(data) {\n        var zone = this.client.zone;\n        var pluginManager = zone.pluginManager;\n        var plugin = this.newPlugin(zone, data);\n        pluginManager.addPlugin(plugin);\n        this.postHandle(plugin, data);\n        EzyLogger.info('request plugin: ' + plugin.name + ' info successfully');\n    }\n\n    newPlugin(zone, data) {\n        var pluginId = data[0];\n        var pluginName = data[1];\n        var plugin = new Entity.EzyPlugin(\n            this.client,\n            zone,\n            pluginId,\n            pluginName\n        );\n        return plugin;\n    }\n\n    postHandle(plugin, data) {}\n}\n\n//======================================\n\nclass EzyPluginResponseHandler {\n    handle(data) {\n        var pluginId = data[0];\n        var responseData = data[1];\n        var cmd = responseData[0];\n        var commandData = responseData[1];\n\n        var plugin = this.client.getPluginById(pluginId);\n        var handler = plugin.getDataHandler(cmd);\n        if (handler) handler(plugin, commandData);\n        else\n            EzyLogger.info(\n                'plugin: ' + plugin.name + ' has no handler for command: ' + cmd\n            );\n    }\n}\n\n//=======================================================\n\nclass EzyPongHandler {\n    handle(data) {}\n}\n\n//=======================================================\n\nclass EzyDataHandlers {\n    constructor(client) {\n        this.handlers = {};\n        this.client = client;\n    }\n\n    addHandler(cmd, handler) {\n        handler.client = this.client;\n        this.handlers[cmd] = handler;\n    }\n\n    getHandler(cmd) {\n        var handler = this.handlers[cmd];\n        return handler;\n    }\n\n    handle(cmd, data) {\n        var handler = this.getHandler(cmd);\n        if (handler) handler.handle(data);\n        else EzyLogger.warn('has no handler with command: ' + cmd);\n    }\n}\n\n//=======================================================\n\nclass EzyAppDataHandlers {\n    constructor() {\n        this.handlers = {};\n    }\n\n    addHandler(cmd, handler) {\n        this.handlers[cmd] = handler;\n    }\n\n    getHandler(cmd) {\n        var handler = this.handlers[cmd];\n        return handler;\n    }\n}\n\n//======================================\n\nclass EzyPluginDataHandlers {\n    constructor() {\n        this.handlers = {};\n    }\n\n    addHandler(cmd, handler) {\n        this.handlers[cmd] = handler;\n    }\n\n    getHandler(cmd) {\n        var handler = this.handlers[cmd];\n        return handler;\n    }\n}\n\n//=======================================================\n\nexport default {\n    EzyConnectionSuccessHandler,\n    EzyConnectionFailureHandler,\n    EzyDisconnectionHandler,\n    EzyEventHandlers,\n    EzyHandshakeHandler,\n    EzyLoginSuccessHandler,\n    EzyLoginErrorHandler,\n    EzyAppAccessHandler,\n    EzyAppExitHandler,\n    EzyAppResponseHandler,\n    EzyPluginInfoHandler,\n    EzyPluginResponseHandler,\n    EzyPongHandler,\n    EzyAppDataHandlers,\n    EzyPluginDataHandlers,\n    EzyDataHandlers,\n};\n"]}
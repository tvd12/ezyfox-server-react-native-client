{"version":3,"sources":["ezy-client.js"],"names":["EzyClient","constructor","config","callback","Proxy","run2","toMap","outputConfig","name","clientName","enableSSL","enableDebug","zone","me","handlerManager","Manager","EzyHandlerManager","setup","EzySetup","connect","host","port","privateKey","sessionKey","run","reconnect","disconnect","reason","r","Const","EzyDisconnectReason","CLOSE","close","send","cmd","data","encrypted","shouldEncrypted","EzyLogger","error","params","requestParams","command","request","startPingSchedule","setStatus","status","setSessionKey","getApp","appManager","app","getAppById","appId","getPluginById","pluginId","pluginManager","newAppManager","zoneName","EzyAppManager","getAppManager","getPluginManager","handleEvent","eventType","eventHandlers","handle","handleData","dataHandlers"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,SAAN,CAAgB;AACZC,EAAAA,WAAW,CAACC,MAAD,EAASC,QAAT,EAAmB;AAC1BC,mBAAMC,IAAN,CAAW,MAAX,EAAmBH,MAAM,CAACI,KAAP,EAAnB,EAAoCC,YAAD,IAAkB;AACjD,WAAKL,MAAL,GAAcK,YAAd;AACA,WAAKC,IAAL,GAAYD,YAAY,CAACE,UAAzB;AACA,WAAKC,SAAL,GAAiBR,MAAM,CAACQ,SAAxB;AACA,WAAKC,WAAL,GAAmBT,MAAM,CAACS,WAA1B;AACA,WAAKC,IAAL,GAAY,IAAZ;AACA,WAAKC,EAAL,GAAU,IAAV;AACA,WAAKC,cAAL,GAAsB,IAAIC,qBAAQC,iBAAZ,CAA8B,IAA9B,CAAtB;AACA,WAAKC,KAAL,GAAa,IAAIC,iBAAJ,CAAa,KAAKJ,cAAlB,CAAb;AACAX,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAVD;AAWH;;AAEDgB,EAAAA,OAAO,CAACC,IAAD,EAAOC,IAAP,EAAa;AAChB,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,UAAL,GAAkB,IAAlB;;AACAnB,mBAAMoB,GAAN,CAAU,SAAV,EAAqB;AAAEf,MAAAA,UAAU,EAAE,KAAKD,IAAnB;AAAyBY,MAAAA,IAAI,EAAEA,IAA/B;AAAqCC,MAAAA,IAAI,EAAEA;AAA3C,KAArB;AACH;;AAEDI,EAAAA,SAAS,CAACtB,QAAD,EAAW;AAChB,SAAKmB,UAAL,GAAkB,IAAlB;AACA,SAAKC,UAAL,GAAkB,IAAlB;;AACAnB,mBAAMC,IAAN,CAAW,WAAX,EAAwB;AAAEI,MAAAA,UAAU,EAAE,KAAKD;AAAnB,KAAxB,EAAmDL,QAAnD;AACH;;AAEDuB,EAAAA,UAAU,CAACC,MAAD,EAAS;AACf,QAAIC,CAAC,GAAGD,MAAM,GAAGA,MAAH,GAAYE,sBAAMC,mBAAN,CAA0BC,KAApD;;AACA3B,mBAAMoB,GAAN,CAAU,YAAV,EAAwB;AAAEf,MAAAA,UAAU,EAAE,KAAKD,IAAnB;AAAyBmB,MAAAA,MAAM,EAAEC;AAAjC,KAAxB;AACH;;AAEDI,EAAAA,KAAK,GAAG;AACJ,SAAKN,UAAL;AACH;;AAEDO,EAAAA,IAAI,CAACC,GAAD,EAAMC,IAAN,EAAYC,SAAZ,EAAuB;AACvB,QAAIC,eAAe,GAAGD,SAAtB;;AACA,QAAIA,SAAS,IAAI,CAAC,KAAKb,UAAvB,EAAmC;AAC/B,UAAI,KAAKZ,WAAT,EAAsB;AAClB0B,QAAAA,eAAe,GAAG,KAAlB;AACH,OAFD,MAEO;AACHC,2BAAUC,KAAV,CACI,qDACI,kEAFR;;AAIA;AACH;AACJ;;AACD,QAAIC,MAAM,GAAG,EAAb;AACAA,IAAAA,MAAM,CAAC/B,UAAP,GAAoB,KAAKD,IAAzB;AACA,QAAIiC,aAAa,GAAG,EAApB;AACAA,IAAAA,aAAa,CAACC,OAAd,GAAwBR,GAAxB;AACAO,IAAAA,aAAa,CAACN,IAAd,GAAqBA,IAArB;AACAM,IAAAA,aAAa,CAACL,SAAd,GAA0BC,eAA1B;AACAG,IAAAA,MAAM,CAACG,OAAP,GAAiBF,aAAjB;;AACArC,mBAAMoB,GAAN,CAAU,MAAV,EAAkBgB,MAAlB;AACH;;AAEDI,EAAAA,iBAAiB,GAAG;AAChBxC,mBAAMoB,GAAN,CAAU,mBAAV,EAA+B;AAAEf,MAAAA,UAAU,EAAE,KAAKD;AAAnB,KAA/B;AACH;;AAEDqC,EAAAA,SAAS,CAACC,MAAD,EAAS;AACd1C,mBAAMoB,GAAN,CAAU,WAAV,EAAuB;AAAEf,MAAAA,UAAU,EAAE,KAAKD,IAAnB;AAAyBsC,MAAAA,MAAM,EAAEA;AAAjC,KAAvB;AACH;;AAEDC,EAAAA,aAAa,CAACxB,UAAD,EAAa;AACtBnB,mBAAMoB,GAAN,CAAU,eAAV,EAA2B;AACvBf,MAAAA,UAAU,EAAE,KAAKD,IADM;AAEvBe,MAAAA,UAAU,EAAEA;AAFW,KAA3B;AAIH;;AAEDyB,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKpC,IAAT,EAAe;AACX,UAAIqC,UAAU,GAAG,KAAKrC,IAAL,CAAUqC,UAA3B;AACA,UAAIC,GAAG,GAAGD,UAAU,CAACD,MAAX,EAAV;AACA,aAAOE,GAAP;AACH;;AACD,WAAO,IAAP;AACH;;AAEDC,EAAAA,UAAU,CAACC,KAAD,EAAQ;AACd,QAAI,CAAC,KAAKxC,IAAV,EAAgB,OAAO,IAAP;AAChB,QAAIqC,UAAU,GAAG,KAAKrC,IAAL,CAAUqC,UAA3B;AACA,WAAOA,UAAU,CAACE,UAAX,CAAsBC,KAAtB,CAAP;AACH;;AAEDC,EAAAA,aAAa,CAACC,QAAD,EAAW;AACpB,QAAI,CAAC,KAAK1C,IAAV,EAAgB,OAAO,IAAP;AAChB,QAAI2C,aAAa,GAAG,KAAK3C,IAAL,CAAU2C,aAA9B;AACA,WAAOA,aAAa,CAACF,aAAd,CAA4BC,QAA5B,CAAP;AACH;;AAEDE,EAAAA,aAAa,CAACC,QAAD,EAAW;AACpB,WAAO,IAAI1C,qBAAQ2C,aAAZ,CAA0BD,QAA1B,CAAP;AACH;;AAEDE,EAAAA,aAAa,GAAG;AACZ,QAAI,CAAC,KAAK/C,IAAV,EAAgB,OAAO,IAAP;AAChB,WAAO,KAAKA,IAAL,CAAUqC,UAAjB;AACH;;AAEDW,EAAAA,gBAAgB,GAAG;AACf,QAAI,CAAC,KAAKhD,IAAV,EAAgB,OAAO,IAAP;AAChB,WAAO,KAAKA,IAAL,CAAU2C,aAAjB;AACH;;AAEDM,EAAAA,WAAW,CAACC,SAAD,EAAY3B,IAAZ,EAAkB;AACzB,QAAI4B,aAAa,GAAG,KAAKjD,cAAL,CAAoBiD,aAAxC;AACAA,IAAAA,aAAa,CAACC,MAAd,CAAqBF,SAArB,EAAgC3B,IAAhC;AACH;;AAED8B,EAAAA,UAAU,CAACvB,OAAD,EAAUP,IAAV,EAAgB;AACtB,QAAI+B,YAAY,GAAG,KAAKpD,cAAL,CAAoBoD,YAAvC;AACAA,IAAAA,YAAY,CAACF,MAAb,CAAoBtB,OAApB,EAA6BP,IAA7B;AACH;;AArHW;;eAwHDnC,S","sourcesContent":["import Proxy from './proxy';\nimport Manager from './ezy-managers';\nimport EzySetup from './ezy-setup';\nimport Const from './ezy-constants';\nimport EzyLogger from './ezy-logger';\n\nclass EzyClient {\n    constructor(config, callback) {\n        Proxy.run2('init', config.toMap(), (outputConfig) => {\n            this.config = outputConfig;\n            this.name = outputConfig.clientName;\n            this.enableSSL = config.enableSSL;\n            this.enableDebug = config.enableDebug;\n            this.zone = null;\n            this.me = null;\n            this.handlerManager = new Manager.EzyHandlerManager(this);\n            this.setup = new EzySetup(this.handlerManager);\n            callback(this);\n        });\n    }\n\n    connect(host, port) {\n        this.privateKey = null;\n        this.sessionKey = null;\n        Proxy.run('connect', { clientName: this.name, host: host, port: port });\n    }\n\n    reconnect(callback) {\n        this.privateKey = null;\n        this.sessionKey = null;\n        Proxy.run2('reconnect', { clientName: this.name }, callback);\n    }\n\n    disconnect(reason) {\n        var r = reason ? reason : Const.EzyDisconnectReason.CLOSE;\n        Proxy.run('disconnect', { clientName: this.name, reason: r });\n    }\n\n    close() {\n        this.disconnect();\n    }\n\n    send(cmd, data, encrypted) {\n        var shouldEncrypted = encrypted;\n        if (encrypted && !this.sessionKey) {\n            if (this.enableDebug) {\n                shouldEncrypted = false;\n            } else {\n                EzyLogger.error(\n                    'can not send command: $cmd, you must enable SSL ' +\n                        'or enable debug mode by configuration when you create the client'\n                );\n                return;\n            }\n        }\n        var params = {};\n        params.clientName = this.name;\n        var requestParams = {};\n        requestParams.command = cmd;\n        requestParams.data = data;\n        requestParams.encrypted = shouldEncrypted;\n        params.request = requestParams;\n        Proxy.run('send', params);\n    }\n\n    startPingSchedule() {\n        Proxy.run('startPingSchedule', { clientName: this.name });\n    }\n\n    setStatus(status) {\n        Proxy.run('setStatus', { clientName: this.name, status: status });\n    }\n\n    setSessionKey(sessionKey) {\n        Proxy.run('setSessionKey', {\n            clientName: this.name,\n            sessionKey: sessionKey,\n        });\n    }\n\n    getApp() {\n        if (this.zone) {\n            var appManager = this.zone.appManager;\n            var app = appManager.getApp();\n            return app;\n        }\n        return null;\n    }\n\n    getAppById(appId) {\n        if (!this.zone) return null;\n        var appManager = this.zone.appManager;\n        return appManager.getAppById(appId);\n    }\n\n    getPluginById(pluginId) {\n        if (!this.zone) return null;\n        var pluginManager = this.zone.pluginManager;\n        return pluginManager.getPluginById(pluginId);\n    }\n\n    newAppManager(zoneName) {\n        return new Manager.EzyAppManager(zoneName);\n    }\n\n    getAppManager() {\n        if (!this.zone) return null;\n        return this.zone.appManager;\n    }\n\n    getPluginManager() {\n        if (!this.zone) return null;\n        return this.zone.pluginManager;\n    }\n\n    handleEvent(eventType, data) {\n        var eventHandlers = this.handlerManager.eventHandlers;\n        eventHandlers.handle(eventType, data);\n    }\n\n    handleData(command, data) {\n        var dataHandlers = this.handlerManager.dataHandlers;\n        dataHandlers.handle(command, data);\n    }\n}\n\nexport default EzyClient;\n"]}